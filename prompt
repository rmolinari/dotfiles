#
# Set up my prompt

# When we are in a git-controlled directory the prompt includes the current
# git branch and status.  In directories not in a git project there is no
# such representation.

function __prompt_exit_val
{
    local val=$?
    if [[ $val != 0 ]]
    then
        printf "${1:- (%s)}" "$val"
    fi
}


function setprompt 
{
    ##
    # Git decoration
    export GIT_PS1_SHOWDIRTYSTATE=true
    export GIT_PS1_SHOWSTASHSTATE=true
    export GIT_PS1_SHOWUNTRACKEDFILES=true
    
    function color {
        echo "\[\e[${1};${2}m\]"
    }

    function plain {
        color 0 $1
    }
    
    function bold {
        color 1 $1
    }

    ##
    # Define local variables for each color and bold: RED, B_RED, GREEN, B_GREEN, etc
    #
    for pair in BLACK_30 RED_31 GREEN_32 BROWN_33 BLUE_34 PURPLE_35 CYAN_36 GRAY_37
    do
        local col=${pair%_*}
        local code=${pair#*_}
        eval "local ${col}=\$(plain ${code})"
        eval "local B_${col}=\$(bold ${code})"
    done

    local RESET_COL="\[\e[0m\]"
    
    local BASE=${BLUE}
    
    local exit_val="\$(__prompt_exit_val '${BROWN} - ?%s${BASE}')"
    local git_status="\$(__git_ps1 ' ${RED}[%s]${BASE}')"
     	    
    PS1="${BASE}[\u:\w${exit_val}]${git_status}\n\$(date +%H:%M:%S) $ ${RESET_COL}"
    
    unset -f color plain bold
}

setprompt
unset -f setprompt
