## -*- mode: shell-script -*-

# Simple completion assistance to help with paths relative to $SVN_ROOT
#
# This works (sort of).  Why is it so complicated?
#
# Some of the many issues that I had:
#
# - I want directories to get trailing spaces but this corner of bash does not
#   appear to honor mark-directories, even with "-o filenames".  This forced me
#   to generated the directories and files separately with find and attach the
#   trailing slash myself.
# - I couldn't even get glob wildcards to expand in here, which ruled out using
#   something simple like "ls <pat>*" instead of find.
#
# I should spend some time looking at the pre-packaged examples in /usr/local/etc/bash_completion.d.
# rcs in that directory gave some tips
_pushpull()
{
  shopt -s extglob
  local cur dirs files findpath match_prefix saveIFS

  # Allow for spaces in filenames
  saveIFS=$IFS
  IFS=$'\n'

  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"

  # dirpart=${cur%/*}
  # filepart=${cur##*/}
  # [[ "${filepart}" = "${dirpart}" ]] && dirpart=
  # if [[ ${dirpart} == "" ]]
  # then
  #   findpath=${SVN_ROOT}
  #   match_prefix=${filepart}
  # else
  #   findpath=${SVN_ROOT}/${dirpart}
  #   match_prefix=${dirpart}/${filepart}
  # fi

  #dirs=$(find ${findpath} -type d -depth 1 | sed -E -e "s|^${SVN_ROOT}/?||" -e "s|$|/|" | grep "^${match_prefix}")
  #dirs=$(compgen -S/ -d "${SVN_ROOT}/${cur}" | sed -E -e "s|^${SVN_ROOT}/?||")
  #files=$(find ${findpath} -type f -depth 1 | sed -E -e "s|^${SVN_ROOT}/?||" | grep "^${match_prefix}")

  # compgen finds the files
  # ls -pd makes sure there are trailing slashes on the directories
  # sed strips off the SVN_ROOT prefix
  files=$(ls -pd $(compgen -f "${SVN_ROOT}/${cur}") | sed -E -e "s|^${SVN_ROOT}/?||")

  COMPREPLY=($(compgen -W "${files}" -- ${cur}))

  IFS=${saveIFS}
}

complete -o nospace -o filenames -F _pushpull apull apush






